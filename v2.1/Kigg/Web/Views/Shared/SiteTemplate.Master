<%@ Master Language="C#" Inherits="System.Web.Mvc.ViewMasterPage<BaseViewData>" %>

<script runat="server">

    protected override void OnInit(EventArgs e)
    {
        base.OnInit(e);

        jQueryScriptManager scriptManager = jQueryScriptManager.Current;

        GenerateScript(scriptManager);
        GenerateHeaders();
        ShowQueuedMessage(scriptManager);
    }

    private void ShowQueuedMessage(jQueryScriptManager scriptManager)
    {
        HttpCookie notification = Request.Cookies["notification"];

        if (notification != null)
        {
            string message = notification.Values["msg"];

            if (!string.IsNullOrEmpty(message))
            {
                bool isError;
                bool.TryParse(notification.Values["err"], out isError);

                message = message.Replace("'", string.Empty).Replace("\"", string.Empty);

                scriptManager.RegisterOnReady("$U.messageBox('Message', '{0}', {1});".FormatWith(message, isError.ToString().ToLowerInvariant()));
            }

            notification = Response.Cookies["notification"];

            if (notification == null) return;
            notification.Expire();
        }
    }

    private const string cookieName = "dotnetomaniakpl_firstVisit";
    private const int expiresIn = 90;
    void CheckIfFirstVisit(jQueryScriptManager scriptManager)
    {
        var firstVisit = Request.Cookies[cookieName];
        if (firstVisit != null) return;

        scriptManager.RegisterSource(Url.Asset("firstVisit"));
        scriptManager.RegisterOnReady("$('#info').slideDown('slow');");
        var cookie = new HttpCookie(cookieName, "false") { Expires = DateTime.Now.AddDays(expiresIn) };
        Response.Cookies.Add(cookie);
    }

    private int arg1;
    private int arg2;
    private void GenerateScript(jQueryScriptManager scriptManager)
    {
        scriptManager.RegisterSource(Url.Asset("js2"));

        scriptManager.RegisterOnReady("Membership.set_isLoggedIn({0});".FormatWith(Model.IsCurrentUserAuthenticated.ToString().ToLowerInvariant()));
        scriptManager.RegisterOnReady("Membership.set_logOutUrl('{0}');".FormatWith(Url.RouteUrl("Logout")));

        scriptManager.RegisterOnReady("Story.set_clickUrl('{0}');".FormatWith(Url.RouteUrl("Click")));
        scriptManager.RegisterOnReady("Story.set_promoteUrl('{0}');".FormatWith(Url.RouteUrl("Promote")));
        scriptManager.RegisterOnReady("Story.set_demoteUrl('{0}');".FormatWith(Url.RouteUrl("Demote")));
        scriptManager.RegisterOnReady("Story.set_markAsSpamUrl('{0}');".FormatWith(Url.RouteUrl("MarkAsSpam")));

        scriptManager.RegisterOnReady("Search.init();");
        scriptManager.RegisterOnReady("Tag.init();");
        scriptManager.RegisterOnReady("Membership.init();");
        Random random = new Random((int)DateTime.Now.Ticks);
        arg1 = random.Next(9) + 1;
        arg2 = random.Next(9) + 1;
        scriptManager.RegisterOnReady("Membership.set_captcha({0})".FormatWith(arg1 + arg2));
        scriptManager.RegisterOnReady("devMedia.init();");

        scriptManager.RegisterOnDispose("Membership.dispose();");
        scriptManager.RegisterOnDispose("Tag.dispose();");
        scriptManager.RegisterOnDispose("Search.dispose();");

        if (Model.IsCurrentUserAuthenticated)
        {
            if (Model.CanCurrentUserModerate)
            {
                scriptManager.RegisterSource(Url.Asset("moderation"));
                scriptManager.RegisterOnReady("Moderation.init();");
                scriptManager.RegisterOnReady("Moderation.set_getStoryUrl('{0}');".FormatWith(Url.RouteUrl("GetStory")));
                scriptManager.RegisterOnReady("Moderation.set_deleteStoryUrl('{0}');".FormatWith(Url.RouteUrl("Delete")));
                scriptManager.RegisterOnReady("Moderation.set_spamStoryUrl('{0}');".FormatWith(Url.RouteUrl("ConfirmSpamStory")));
                scriptManager.RegisterOnReady("Moderation.set_approveStoryUrl('{0}');".FormatWith(Url.RouteUrl("ApproveStory")));
                scriptManager.RegisterOnReady("Moderation.set_spamCommentUrl('{0}');".FormatWith(Url.RouteUrl("ConfirmSpamComment")));
                scriptManager.RegisterOnReady("Moderation.set_markCommentAsOffendedUrl('{0}');".FormatWith(Url.RouteUrl("MarkCommentAsOffended")));

                scriptManager.RegisterOnDispose("Moderation.dispose();");
            }

            if (Model.CurrentUser.IsAdministrator())
            {
                scriptManager.RegisterSource(Url.Asset("administration"));
                scriptManager.RegisterOnReady("Administration.init();");
                scriptManager.RegisterOnReady("Administration.set_lockUserUrl('{0}');".FormatWith(Url.RouteUrl("LockUser")));
                scriptManager.RegisterOnReady("Administration.set_unlockUserUrl('{0}');".FormatWith(Url.RouteUrl("UnlockUser")));
                scriptManager.RegisterOnReady("Administration.set_publishUrl('{0}');".FormatWith(Url.RouteUrl("Publish")));
                scriptManager.RegisterOnDispose("Administration.dispose();");
            }
        }
        CheckIfFirstVisit(scriptManager);
    }

    private void GenerateHeaders()
    {
        if (string.IsNullOrEmpty(Page.Header.Title))
        {
            Page.Header.Title = Model.SiteTitle;
        }

        metaKeywords.Content = Model.MetaKeywords;
        metaDescription.Content = Model.MetaDescription;

        //Remove the ugly server ID tag
        metaKeywords.ID = metaDescription.ID = null;
    }

</script>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head runat="server">
    <meta http-equiv="content-type" content="text/html;charset=utf-8" />
    <meta id="metaKeywords" runat="server" name="keywords" content="" />
    <meta id="metaDescription" runat="server" name="description" content="" />
    <meta name="robots" content="index,follow" />
    <title></title>
    <link href='http://cdn.devmedia.pl/common/css/devmedia.css' rel='stylesheet' type='text/css'/>  
    <link href="<%= Url.Asset("css").Replace("&", "&amp;") %>" rel="stylesheet" type="text/css" />
    <link href="<%= Url.Image("fav.ico")%>" rel="shortcut icon" type="image/x-icon" />
    <link href="<%= Url.Image("fav.png")%>" rel="icon" type="image/png" />
    <link href="<%= Url.Content("~/opensearch.axd")%>" title="<%= Model.SiteTitle %>"
        rel="search" type="application/opensearchdescription+xml" />
    
    <script src="http://ajax.microsoft.com/ajax/jQuery/jquery-1.3.2.min.js" type='text/javascript'></script>
    <script src="https://www.google.com/jsapi?key=ABQIAAAAdWi2-jJ3tpgf0HNqkwp6TBRfozVu3uzgMdQm0owx2puRbZ1h7hQwKYIn0t3A1mHpnYzWO-ppxXkndQ" type="text/javascript"></script>
    <script type='text/javascript'>
         google.load('feeds', '1');
    </script>
    <script src='http://cdn.devmedia.pl/common/js/devmedia.js' type='text/javascript'></script>
    <script src="<%= Url.Asset("js1").Replace("&", "&amp;") %>" type="text/javascript"></script>        
    <asp:ContentPlaceHolder ID="HeadPlaceHolder" runat="server">
    </asp:ContentPlaceHolder>
</head>
<body>
    <div id="pageContainer">
        <div id="info">
            <p>
                Pierwszy raz na dotnetomaniaku? Przeczytaj nasz <a href="<%= Url.RouteUrl("Faq") %>">
                    FAQ</a> lub <a href="<%= Url.RouteUrl("Contact") %>">zadaj nam pytanie</a>.</p>
        </div>
        <div id="header">
            <div class="filler">
            </div>
            <div class="title">
                <h1>
                    <a rel="home" href="<%= Url.Content("~/")%>">
                        <%--<%= Model.SiteTitle %>--%></a></h1>
            </div>
            <div class="links">
                <% Html.RenderAction<MembershipController>(c => c.Menu()); %>
                <% Html.RenderPartial("SearchBox", ViewData.Model); %>
                <p class="storyLinks">
                    <%= Html.ActionLink("Dodaj artykuł", "Submit", "Story")%>
                    <%= Html.ActionLink("Nadchodzące artykuły", "Upcoming", "Story")%>
                </p>
            </div>
        </div>
        <div id="mcontainer">
            <div class="menu">
                <% Html.RenderAction<CategoryController>(c => c.Menu()); %>
            </div>
        </div>
        <div id="wrapper">
            <div id="sidebar">
                <%
                    if (Model.CanCurrentUserModerate)
                    {
                        Html.RenderAction<SupportController>(c => c.ControlPanel());
                    }
                %>
                <% Html.RenderPartial("IntroBox"); %>
                <div class="divider">
                </div>
                <% Html.RenderPartial("FeedBox"); %>
                <div class="divider">
                </div>
                <%--<% Html.RenderPartial("RecommendationsBox"); %>
                <div class="divider">
                </div>--%>
                <% Html.RenderAction<MembershipController>(c => c.TopTabs()); %>
                <div class="divider">
                </div>
                <% Html.RenderAction<TagController>(c => c.Tabs()); %>
                <div class="divider">
                </div>
            </div>
            <div id="content">
                <asp:ContentPlaceHolder ID="MainContentPlaceHolder" runat="server">
                </asp:ContentPlaceHolder>
            </div>
            <div class="clear">
            </div>
        </div>
        <div id="footer">
            <div style="float: left; padding-left: 10px; padding-top: 3px">
                <p>
                    ©
                    <%= ViewData.Model.SiteTitle %>.
                    <%= DateTime.Today.Year.ToString("0000") %>
                    - Treść opublikowana przez użytkowników portalu umieszczana jest na zasadzie <a target="_blank"
                        rel="license" href="http://creativecommons.org/licenses/publicdomain/">public domain</a>.</p>
            </div>
            <div style="float: right; padding-right: 10px">
                <p>
                    <a href="<%= Url.RouteUrl("About") %>">O nas</a> | <a href="<%= Url.RouteUrl("Contact") %>">
                        Kontakt</a> <a href="http://www.codeplex.com/Kigg" target="_blank">
                            <img alt="Powered By KiGG" style="border: 0px;" src="<%= Url.Image("Kigg.png") %>" /></a></p>
            </div>
        </div>
    </div>
    <div id="confirmationBox">
    </div>
    <div id="messageBox">
    </div>
    <div id="dimBackground" class="dimBackground">
    </div>
    <% Html.RenderPartial("MembershipBox", Model, new ViewDataDictionary {{"Arg1", arg1}, {"Arg2", arg2}});%>
    <kigg:jQueryScriptManager ID="scripts" runat="server">
    </kigg:jQueryScriptManager>
    <script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-7150596-1");
pageTracker._trackPageview();
} catch(err) {}</script>
</body>
</html>
